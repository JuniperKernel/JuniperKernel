# Decide OS
# Essentially switch between osx and Linux; fail if windows
ifeq ($(OS),Windows_NT)
  $(error Makevars was run, but OS is windows. Makevars.win should be run instead.)
else
  # *nix
  UNAME = $(shell uname)
  SYS=unix
  ifeq ($(UNAME),Darwin)
    SYS = osx
  endif

  MACH = $(shell uname -m)
  ARCH = 32
  ifeq ($(MACH),x86_64)
    ARCH = 64
  endif

  ifeq ($(UNAME),Linux)
    ARCH=''
  endif
endif

R_HOME=$(shell R RHOME)
RSCRIPT=$(R_HOME)/bin/Rscript
R_LIB = $(shell $(RSCRIPT) -e 'cat(.Library)')


# zmq bacon bits
ZMQ_VERSION = 4.2.2
ZMQ_TAR_FILE= libzmq-${ZMQ_VERSION}.tar.gz
ZMQ_TAR_URL = https://github.com/JuniperKernel/zmq/raw/master/${SYS}${ARCH}/${ZMQ_TAR_FILE}
ZMQ_HEADER_TAR_FILE = zmq-${ZMQ_VERSION}-headers.tar.gz
ZMQ_HEADERS_URL = https://github.com/JuniperKernel/zmq/raw/master/headers/${ZMQ_HEADER_TAR_FILE}
ZMQ_CPP_HEADER_URL = https://github.com/zeromq/cppzmq/raw/master/zmq.hpp
ZMQ_CPPADDON_HEADER_URL = https://raw.githubusercontent.com/zeromq/cppzmq/master/zmq_addon.hpp

## use C++11
CXX_STD      = CXX14

# set include and linker options
PKG_CPPFLAGS = -I../inst/include/ -I../inst/include/xeus -I.
PKG_LIBS     = -lzmq -L../inst/zmq -Wl,-rpath,$(R_LIB)/JuniperKernel/zmq

all: deps $(SHLIB)


deps: zmq headers

.PHONY: zmq, headers

zmq: ../inst/zmq/libzmq.a


../inst/zmq/libzmq.a:
	@echo "Downloading libzmq prebuild"
	@[ -d ../inst/zmq ] || mkdir -p ../inst/zmq
	@curl -skLO ${ZMQ_TAR_URL} && tar -xzf ${ZMQ_TAR_FILE} -C ../inst/zmq && rm -rf ${ZMQ_TAR_FILE}

headers:
	@echo "Downloading ZMQ header files"
	@[ -d ../inst/include ] || mkdir -p ../inst/include
	@curl -skLO ${ZMQ_CPP_HEADER_URL}
	@mv zmq.hpp ../inst/include
	@curl -skLO ${ZMQ_CPPADDON_HEADER_URL}
	@mv zmq_addon.hpp ../inst/include
	@curl -skLO ${ZMQ_HEADERS_URL} && tar -xzf ${ZMQ_HEADER_TAR_FILE} && mv include/*h ../inst/include && rm -rf ${ZMQ_HEADER_TAR_FILE} include
